{"ast":null,"code":"import Qs from \"qs\";\nexport default {\n  name: \"Latest\",\n\n  data() {\n    return {\n      topics: [],\n      favorites: [],\n      comments: []\n    };\n  },\n\n  computed: {\n    getFavorite() {\n      return topicId => this.getFavoriteCount(topicId);\n    },\n\n    getComment() {\n      return topicId => this.getCommentCount(topicId);\n    },\n\n    isShowDelete() {\n      return topicName => this.showDelete(topicName);\n    }\n\n  },\n\n  mounted() {\n    this.$axios.post('http://localhost:8080/topic/latestTopic').then(response => {\n      this.topics = response.data;\n    });\n    this.$axios.post('http://localhost:8080/favorite/selectFavorite').then(response => {\n      this.favorites = response.data;\n    }, error => {\n      console.log(error);\n    });\n    this.$axios.post('http://localhost:8080/comment/selectComment').then(response => {\n      this.comments = response.data;\n    }, error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n    emitDeleteTopic(topicId) {\n      this.$axios.post('http://localhost:8080/topic/deleteTopic', Qs.stringify({\n        topicId: topicId\n      })).then(response => {\n        if (response.data === 1) {\n          this.succeed2();\n          this.$axios.post('http://localhost:8080/topic/latestTopic').then(response => {\n            this.topics = response.data;\n          });\n        } else {\n          this.failed2();\n        }\n      }, error => {\n        this.error(error);\n      });\n    },\n\n    showDelete(topicName) {\n      let user = JSON.parse(localStorage.getItem('user'));\n\n      if (user !== null && user.name !== '' && user.password !== '') {\n        return user.name === topicName;\n      }\n    },\n\n    succeed() {\n      this.$notify({\n        title: '成功',\n        message: '点赞成功',\n        type: 'success'\n      });\n    },\n\n    succeed2() {\n      this.$notify({\n        title: '成功',\n        message: '删除成功',\n        type: 'success'\n      });\n    },\n\n    failed() {\n      this.$notify.error({\n        title: '失败',\n        message: '您已经点赞过该帖子'\n      });\n    },\n\n    failed2() {\n      this.$notify.error({\n        title: '失败',\n        message: '删除失败，服务端故障'\n      });\n    },\n\n    error(message) {\n      this.$notify.error({\n        title: '错误',\n        message: '服务器端错误,错误原因：' + message\n      });\n    },\n\n    notLogged() {\n      this.$notify.error({\n        title: '失败',\n        message: '请先登录'\n      });\n    },\n\n    getFavoriteCount(target) {\n      let count = 0;\n      let favorite;\n\n      for (favorite in this.favorites) {\n        if (this.favorites[favorite].favoriteTarget === target) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n\n    getCommentCount(target) {\n      let count = 0;\n      let comment;\n\n      for (comment in this.comments) {\n        if (this.comments[comment].commentarget === target) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n\n    emitFavorite(favoriteTarget) {\n      let user = JSON.parse(localStorage.getItem('user'));\n\n      if (user !== null && user.name !== '' && user.password !== '') {\n        let favorite = {\n          favoriteName: user.name,\n          favoriteTarget: favoriteTarget\n        };\n        this.$axios.post('http://localhost:8080/favorite/createFavorite', Qs.stringify(favorite)).then(response => {\n          if (response.data === 1) {\n            this.succeed();\n            this.$axios.post('http://localhost:8080/favorite/selectFavorite').then(response => {\n              this.favorites = response.data;\n            }, error => {\n              console.log(error);\n            });\n          } else {\n            this.failed();\n          }\n        }, error => {\n          this.error(error);\n        });\n      } else {\n        this.notLogged();\n      }\n    },\n\n    emitComment(topicId) {\n      this.$bus.$emit('comment', topicId);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkCA;AACA;EACAA,cADA;;EAEAC;IACA;MACAC,UADA;MAEAC,aAFA;MAGAC;IAHA;EAKA,CARA;;EASAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA;IACA;;EATA,CATA;;EAoBAC;IACA,iEACAC;MACA;IACA,CAHA;IAMA,uEACAA;MACA;IACA,CAHA,EAIAC;MACAC;IACA,CANA;IASA,qEACAF;MACA;IACA,CAHA,EAIAC;MACAC;IACA,CANA;EAQA,CA5CA;;EA6CAC;IACAC;MACA;QAAAC;MAAA,SACAL;QACA;UACA;UACA,iEACAA;YACA;UACA,CAHA;QAKA,CAPA,MAOA;UACA;QACA;MACA,CAZA,EAaAC;QACA;MACA,CAfA;IAiBA,CAnBA;;IAoBAK;MACA;;MACA;QACA;MACA;IACA,CAzBA;;IA0BAC;MACA;QACAC,WADA;QAEAC,eAFA;QAGAC;MAHA;IAKA,CAhCA;;IAiCAC;MACA;QACAH,WADA;QAEAC,eAFA;QAGAC;MAHA;IAKA,CAvCA;;IAwCAE;MACA;QACAJ,WADA;QAEAC;MAFA;IAIA,CA7CA;;IA8CAI;MACA;QACAL,WADA;QAEAC;MAFA;IAIA,CAnDA;;IAoDAR;MACA;QACAO,WADA;QAEAC;MAFA;IAIA,CAzDA;;IA0DAK;MACA;QACAN,WADA;QAEAC;MAFA;IAIA,CA/DA;;IAgEAM;MACA;MACA;;MACA;QACA;UACAC;QACA;MACA;;MACA;IACA,CAzEA;;IA0EAC;MACA;MACA;;MACA;QACA;UACAD;QACA;MACA;;MACA;IACA,CAnFA;;IAoFAE;MACA;;MACA;QACA;UACAC,uBADA;UAEAC;QAFA;QAIA,+FACApB;UACA;YACA;YACA,uEACAA;cACA;YACA,CAHA,EAIAC;cACAC;YACA,CANA;UAQA,CAVA,MAUA;YACA;UACA;QACA,CAfA,EAgBAD;UACA;QACA,CAlBA;MAoBA,CAzBA,MAyBA;QACA;MACA;IACA,CAlHA;;IAmHAoB;MACA;IACA;;EArHA;AA7CA","names":["name","data","topics","favorites","comments","computed","getFavorite","getComment","isShowDelete","mounted","response","error","console","methods","emitDeleteTopic","topicId","showDelete","succeed","title","message","type","succeed2","failed","failed2","notLogged","getFavoriteCount","count","getCommentCount","emitFavorite","favoriteName","favoriteTarget","emitComment"],"sourceRoot":"src/pages","sources":["Latest.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <br><br><br>\r\n    <article class=\"media\" v-for=\"topic in topics\" :key=\"topic.topicId\">\r\n      <figure class=\"media-left\">\r\n          <p class=\"image is-64x64\">\r\n            <img src=\"../assets/logo.png\">\r\n          </p>\r\n      </figure>\r\n      <div class=\"media-content\">\r\n        <div class=\"content\">\r\n          <p>\r\n            <strong>{{ topic.topicUserName }}({{ topic.topicName }})</strong> <el-tag>{{ topic.topicType }}</el-tag> <small>{{ topic.topicTime }}</small>\r\n            <br>\r\n           {{ topic.topicContent }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <el-button\r\n          type=\"danger\" plain\r\n          v-if=\"isShowDelete(topic.topicName)\"\r\n          class=\"myDelete\"\r\n          @click=\"emitDeleteTopic(topic.topicId)\">删除帖子</el-button>\r\n      <el-badge :value=\"getFavorite(topic.topicId)\" class=\"item\">\r\n        <el-button size=\"small\" @click=\"emitFavorite(topic.topicId)\">点赞</el-button>\r\n      </el-badge>\r\n      <el-badge :value=\"1\" class=\"item\" type=\"primary\">\r\n        <el-button size=\"small\" @click=\"emitComment(topic.topicId)\">评论</el-button>\r\n      </el-badge>\r\n    </article>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Qs from \"qs\"\r\n  export default {\r\n      name: \"Latest\",\r\n      data(){\r\n        return {\r\n          topics:[],\r\n          favorites:[],\r\n          comments:[]\r\n        }\r\n      },\r\n      computed:{\r\n        getFavorite(){\r\n          return topicId => this.getFavoriteCount(topicId)\r\n        },\r\n        getComment(){\r\n          return topicId => this.getCommentCount(topicId)\r\n        },\r\n        isShowDelete(){\r\n          return topicName => this.showDelete(topicName)\r\n        }\r\n      },\r\n      mounted() {\r\n        this.$axios.post('http://localhost:8080/topic/latestTopic').then(\r\n            response => {\r\n              this.topics = response.data\r\n            },\r\n        )\r\n\r\n        this.$axios.post('http://localhost:8080/favorite/selectFavorite').then(\r\n            response => {\r\n              this.favorites = response.data\r\n            },\r\n            error => {\r\n              console.log(error)\r\n            }\r\n        )\r\n\r\n        this.$axios.post('http://localhost:8080/comment/selectComment').then(\r\n            response => {\r\n              this.comments = response.data\r\n            },\r\n            error => {\r\n              console.log(error)\r\n            }\r\n        )\r\n      },\r\n      methods:{\r\n        emitDeleteTopic(topicId){\r\n          this.$axios.post('http://localhost:8080/topic/deleteTopic',Qs.stringify({topicId:topicId})).then(\r\n              response => {\r\n                if (response.data === 1){\r\n                  this.succeed2()\r\n                  this.$axios.post('http://localhost:8080/topic/latestTopic').then(\r\n                      response => {\r\n                        this.topics = response.data\r\n                      },\r\n                  )\r\n                }else {\r\n                  this.failed2()\r\n                }\r\n              },\r\n              error => {\r\n                this.error(error)\r\n              }\r\n          )\r\n        },\r\n        showDelete(topicName){\r\n          let user = JSON.parse(localStorage.getItem('user'));\r\n          if (user !== null && user.name !== '' && user.password !== ''){\r\n            return user.name === topicName\r\n          }\r\n        },\r\n        succeed() {\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '点赞成功',\r\n            type: 'success'\r\n          });\r\n        },\r\n        succeed2() {\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '删除成功',\r\n            type: 'success'\r\n          });\r\n        },\r\n        failed() {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: '您已经点赞过该帖子',\r\n          });\r\n        },\r\n        failed2() {\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: '删除失败，服务端故障',\r\n          });\r\n        },\r\n        error(message) {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: '服务器端错误,错误原因：' + message,\r\n          });\r\n        },\r\n        notLogged(){\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: '请先登录',\r\n          });\r\n        },\r\n        getFavoriteCount(target){\r\n          let count = 0\r\n          let favorite\r\n          for (favorite in this.favorites){\r\n            if (this.favorites[favorite].favoriteTarget === target){\r\n              count++\r\n            }\r\n          }\r\n          return count\r\n        },\r\n        getCommentCount(target){\r\n          let count = 0;\r\n          let comment\r\n          for (comment in this.comments){\r\n            if (this.comments[comment].commentarget === target){\r\n              count++\r\n            }\r\n          }\r\n          return count\r\n        },\r\n        emitFavorite(favoriteTarget){\r\n          let user = JSON.parse(localStorage.getItem('user'));\r\n          if (user !== null && user.name !== '' && user.password !== ''){\r\n            let favorite = {\r\n              favoriteName:user.name,\r\n              favoriteTarget:favoriteTarget\r\n            }\r\n            this.$axios.post('http://localhost:8080/favorite/createFavorite',Qs.stringify(favorite)).then(\r\n                response => {\r\n                  if (response.data === 1){\r\n                    this.succeed()\r\n                    this.$axios.post('http://localhost:8080/favorite/selectFavorite').then(\r\n                        response => {\r\n                          this.favorites = response.data\r\n                        },\r\n                        error => {\r\n                          console.log(error)\r\n                        }\r\n                    )\r\n                  }else {\r\n                    this.failed()\r\n                  }\r\n                },\r\n                error => {\r\n                  this.error(error)\r\n                }\r\n            )\r\n          }else {\r\n            this.notLogged()\r\n          }\r\n        },\r\n        emitComment(topicId){\r\n          this.$bus.$emit('comment',topicId)\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n  .item {\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n  }\r\n  .myDelete{\r\n    margin-right: 40px;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}