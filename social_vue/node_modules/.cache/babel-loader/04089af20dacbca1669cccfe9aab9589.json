{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  name: \"Register\",\n\n  data() {\n    var validateName = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入账号'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      dialogVisible: false,\n      ruleForm: {\n        name: '',\n        pass: '',\n        checkPass: ''\n      },\n      rules: {\n        name: [{\n          validator: validateName,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    handleClose(done) {\n      this.$refs['ruleForm'].resetFields();\n      done();\n      this.$bus.$emit('router', '/home');\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          // alert('submit!');\n          const user = {\n            name: this.ruleForm.name,\n            password: this.ruleForm.pass\n          };\n          this.$axios.post('http://localhost:8082/user/createUser', JSON.stringify(user)).then(response => {\n            console.log(\"请求成功，结果\");\n          });\n          this.$refs[formName].resetFields();\n          this.dialogVisible = false;\n          this.$bus.$emit('router', '/home');\n        } else {\n          console.log('输入有误');\n          return false;\n        }\n      });\n    },\n\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n\n  },\n\n  mounted() {\n    this.dialogVisible = true;\n  }\n\n};","map":{"version":3,"mappings":";AA6BA;EACAA,gBADA;;EAEAC;IACA;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA;IACA,CANA;;IAOA;MACA;QACAA;MACA,CAFA,MAEA;QACA;UACA;QACA;;QACAA;MACA;IACA,CATA;;IAUA;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CARA;;IASA;MACAC,oBADA;MAEAC;QACAJ,QADA;QAEAK,QAFA;QAGAC;MAHA,CAFA;MAOAC;QACAP,OACA;UAAAQ;UAAAC;QAAA,CADA,CADA;QAIAJ,OACA;UAAAG;UAAAC;QAAA,CADA,CAJA;QAOAH,YACA;UAAAE;UAAAC;QAAA,CADA;MAPA;IAPA;EAmBA,CAhDA;;EAiDAC;IACAC;MACA;MACAC;MACA;IAEA,CANA;;IAOAC;MACA;QACA;UACA;UACA;YACAb,wBADA;YAEAc;UAFA;UAIA,qFACAC;YACAC;UACA,CAHA;UAKA;UACA;UACA;QACA,CAdA,MAcA;UACAA;UACA;QACA;MACA,CAnBA;IAoBA,CA5BA;;IA6BAC;MACA;IACA;;EA/BA,CAjDA;;EAkFAC;IACA;EACA;;AApFA","names":["name","data","callback","dialogVisible","ruleForm","pass","checkPass","rules","validator","trigger","methods","handleClose","done","submitForm","password","response","console","resetForm","mounted"],"sourceRoot":"src/pages","sources":["Register.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n        title=\"提示\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"30%\"\r\n        :before-close=\"handleClose\">\r\n      <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"账号\" prop=\"name\">\r\n          <el-input type=\"text\" v-model=\"ruleForm.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"pass\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n  </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    var validateName = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入账号'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      dialogVisible: false,\r\n      ruleForm: {\r\n        name:'',\r\n        pass: '',\r\n        checkPass: '',\r\n      },\r\n      rules: {\r\n        name: [\r\n          { validator: validateName, trigger: 'blur' }\r\n        ],\r\n        pass: [\r\n          { validator: validatePass, trigger: 'blur' }\r\n        ],\r\n        checkPass: [\r\n          { validator: validatePass2, trigger: 'blur' }\r\n        ],\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleClose(done) {\r\n      this.$refs['ruleForm'].resetFields();\r\n      done();\r\n      this.$bus.$emit('router','/home');\r\n\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          // alert('submit!');\r\n          const user = {\r\n            name:this.ruleForm.name,\r\n            password:this.ruleForm.pass\r\n          }\r\n          this.$axios.post('http://localhost:8082/user/createUser',JSON.stringify(user)).then(\r\n              response => {\r\n                console.log(\"请求成功，结果\",)\r\n              }\r\n          )\r\n          this.$refs[formName].resetFields();\r\n          this.dialogVisible = false\r\n          this.$bus.$emit('router','/home');\r\n        } else {\r\n          console.log('输入有误');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    }\r\n  },\r\n  mounted(){\r\n    this.dialogVisible = true\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}