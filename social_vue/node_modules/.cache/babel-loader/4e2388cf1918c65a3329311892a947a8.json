{"ast":null,"code":"import Qs from \"qs\";\nimport Moment from \"moment\";\nexport default {\n  name: \"Comment\",\n\n  data() {\n    return {\n      content: '',\n      topic: {},\n      comments: []\n    };\n  },\n\n  computed: {\n    showCommentUserName() {\n      return commentName => this.getCommentUserName(commentName);\n    }\n\n  },\n\n  mounted() {\n    this.$axios.post('http://localhost:8080/topic/selectTopicById', Qs.stringify({\n      topicId: this.$route.query.comment_target\n    })).then(response => {\n      this.topic = response.data;\n    }, error => {\n      console.log(error);\n    });\n    this.$axios.post('http://localhost:8080/comment/selectCommentByTarget', Qs.stringify({\n      commentTarget: this.$route.query.comment_target\n    })).then(response => {\n      this.comments = response.data;\n      console.log(this.comments);\n    }, error => {\n      this.error(error);\n    });\n  },\n\n  methods: {\n    getCommentUserName(commentName) {\n      this.$axios.post('http://localhost:8080/user/selectUserByName', Qs.stringify({\n        userName: commentName\n      })).then(response => {\n        console.log(response.data);\n      }, error => {\n        this.error(error);\n      });\n    },\n\n    succeed() {\n      this.$notify({\n        title: '成功',\n        message: '评论成功',\n        type: 'success'\n      });\n    },\n\n    failed() {\n      this.$notify.error({\n        title: '失败',\n        message: '评论失败，服务端错误'\n      });\n    },\n\n    error(message) {\n      this.$notify.error({\n        title: '错误',\n        message: '服务器端错误,错误原因：' + message\n      });\n    },\n\n    emitReturn() {\n      this.$bus.$emit('router', this.$route.query.router);\n    },\n\n    emitSubmit() {\n      if (this.content === '') {\n        this.$notify.error({\n          title: '失败',\n          message: '请输入评论内容'\n        });\n      } else {\n        let user = JSON.parse(localStorage.getItem('user'));\n\n        if (user !== null && user.name !== '' && user.password !== '') {\n          let comment = {\n            commentTarget: this.$route.query.comment_target,\n            commentName: user.name,\n            commentContent: this.content,\n            commentTime: Moment().format(\"YYYY-MM-DD HH:mm:ss\")\n          };\n          this.$axios.post('http://localhost:8080/comment/createComment', Qs.stringify(comment)).then(response => {\n            if (response.data === 1) {\n              this.succeed();\n            } else {\n              this.failed();\n            }\n          }, error => {\n            this.error(error);\n          });\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkEA;AACA;AACA;EACAA,eADA;;EAEAC;IACA;MACAC,WADA;MAEAC,SAFA;MAGAC;IAHA;EAKA,CARA;;EASAC;IACAC;MACA;IACA;;EAHA,CATA;;EAcAC;IACA,gEACAC;MAAAC;IAAA,EADA,EACAC,IADA,CAEAC;MACA;IACA,CAJA,EAKAC;MACAC;IACA,CAPA;IAUA,wEACAL;MAAAM;IAAA,EADA,EACAJ,IADA,CAEAC;MACA;MACAE;IACA,CALA,EAMAD;MACA;IACA,CARA;EAUA,CAnCA;;EAoCAG;IACAC;MACA;QAAAC;MAAA,SACAN;QACAE;MACA,CAHA,EAIAD;QACA;MACA,CANA;IAQA,CAVA;;IAWAM;MACA;QACAC,WADA;QAEAC,eAFA;QAGAC;MAHA;IAKA,CAjBA;;IAkBAC;MACA;QACAH,WADA;QAEAC;MAFA;IAIA,CAvBA;;IAwBAR;MACA;QACAO,WADA;QAEAC;MAFA;IAIA,CA7BA;;IA8BAG;MACA;IACA,CAhCA;;IAiCAC;MACA;QACA;UACAL,WADA;UAEAC;QAFA;MAIA,CALA,MAKA;QACA;;QACA;UACA;YACAN,+CADA;YAEAW,sBAFA;YAGAC,4BAHA;YAIAC;UAJA;UAMA,4FACAhB;YACA;cACA;YACA,CAFA,MAEA;cACA;YACA;UACA,CAPA,EAQAC;YACA;UACA,CAVA;QAYA;MACA;IACA;;EA9DA;AApCA","names":["name","data","content","topic","comments","computed","showCommentUserName","mounted","Qs","topicId","then","response","error","console","commentTarget","methods","getCommentUserName","userName","succeed","title","message","type","failed","emitReturn","emitSubmit","commentName","commentContent","commentTime"],"sourceRoot":"src/pages","sources":["Comment.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <br><br><br><br>\r\n    <article class=\"media\">\r\n      <figure class=\"media-left\">\r\n        <p class=\"image is-64x64\">\r\n          <img src=\"../assets/logo.png\">\r\n        </p>\r\n      </figure>\r\n      <div class=\"media-content\">\r\n        <div class=\"content\">\r\n          <p>\r\n            <strong>{{ topic.topicUserName }}({{ topic.topicName }})</strong> <small>{{ topic.topicTime }}</small>\r\n            <br>\r\n            {{ topic.topicContent }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <el-button type=\"danger\" @click=\"emitReturn\">返回</el-button>\r\n    </article>\r\n\r\n    <!--进行评论-->\r\n    <article class=\"media\">\r\n      <figure class=\"media-left\">\r\n        <p class=\"image is-64x64\">\r\n          <img src=\"../assets/logo.png\">\r\n        </p>\r\n      </figure>\r\n      <div class=\"media-content\">\r\n        <div class=\"field\">\r\n          <p class=\"control\">\r\n            <textarea class=\"textarea\" placeholder=\"请输入评论内容\" v-model=\"content\"></textarea>\r\n          </p>\r\n        </div>\r\n        <nav class=\"level\">\r\n          <div class=\"level-left\">\r\n            <div class=\"level-item\">\r\n              <a class=\"button is-info\" @click=\"emitSubmit\">发送</a>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </article>\r\n    <el-divider></el-divider>\r\n\r\n    <!--评论区-->\r\n    <article class=\"media\" v-for=\"comment in comments\" :key=\"comment.commentId\">\r\n      <figure class=\"media-left\">\r\n        <p class=\"image is-64x64\">\r\n          <img src=\"../assets/logo.png\">\r\n        </p>\r\n      </figure>\r\n      <div class=\"media-content\">\r\n        <div class=\"content\">\r\n          <p>\r\n            <strong>{{ showCommentUserName(comment.commentName) }}</strong> <small>{{ comment.commentTime }}</small>\r\n            <br>\r\n            {{ comment.commentContent }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Qs from \"qs\"\r\n  import Moment from \"moment\";\r\n  export default {\r\n    name: \"Comment\",\r\n    data(){\r\n      return {\r\n        content:'',\r\n        topic:{},\r\n        comments:[]\r\n      }\r\n    },\r\n    computed:{\r\n      showCommentUserName(){\r\n        return commentName => this.getCommentUserName(commentName)\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$axios.post('http://localhost:8080/topic/selectTopicById',\r\n        Qs.stringify({topicId:this.$route.query.comment_target})).then(\r\n            response => {\r\n              this.topic = response.data\r\n            },\r\n            error => {\r\n              console.log(error)\r\n            }\r\n      )\r\n\r\n      this.$axios.post('http://localhost:8080/comment/selectCommentByTarget',\r\n          Qs.stringify({commentTarget:this.$route.query.comment_target})).then(\r\n              response => {\r\n                this.comments = response.data\r\n                console.log(this.comments)\r\n              },\r\n              error => {\r\n                this.error(error)\r\n              }\r\n      )\r\n    },\r\n    methods:{\r\n      getCommentUserName(commentName){\r\n        this.$axios.post('http://localhost:8080/user/selectUserByName',Qs.stringify({userName:commentName})).then(\r\n            response => {\r\n              console.log(response.data)\r\n            },\r\n            error => {\r\n              this.error(error)\r\n            }\r\n        )\r\n      },\r\n      succeed() {\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '评论成功',\r\n          type: 'success'\r\n        });\r\n      },\r\n      failed() {\r\n        this.$notify.error({\r\n          title: '失败',\r\n          message: '评论失败，服务端错误',\r\n        });\r\n      },\r\n      error(message) {\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: '服务器端错误,错误原因：' + message,\r\n        });\r\n      },\r\n      emitReturn(){\r\n        this.$bus.$emit('router',this.$route.query.router)\r\n      },\r\n      emitSubmit(){\r\n        if (this.content === ''){\r\n          this.$notify.error({\r\n            title: '失败',\r\n            message: '请输入评论内容',\r\n          });\r\n        }else {\r\n          let user = JSON.parse(localStorage.getItem('user'));\r\n          if (user !== null && user.name !== '' && user.password !== ''){\r\n            let comment = {\r\n              commentTarget:this.$route.query.comment_target,\r\n              commentName:user.name,\r\n              commentContent:this.content,\r\n              commentTime:Moment().format(\"YYYY-MM-DD HH:mm:ss\")\r\n            }\r\n            this.$axios.post('http://localhost:8080/comment/createComment',Qs.stringify(comment)).then(\r\n                response => {\r\n                  if (response.data === 1){\r\n                    this.succeed()\r\n                  }else {\r\n                    this.failed()\r\n                  }\r\n                },\r\n                error => {\r\n                  this.error(error)\r\n                }\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}